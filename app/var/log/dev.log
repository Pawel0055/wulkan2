[2023-08-22T18:16:25.160814+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-22T18:17:19.867559+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-22T18:17:19.884455+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:17:19.885364+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:17:19.894249+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to undefined method App\Controller\PingController::getDoctrine()" at /var/www/project/src/Controller/PingController.php line 15 {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\PingController::getDoctrine() at /var/www/project/src/Controller/PingController.php:15)"} []
[2023-08-22T18:17:19.953644+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b05fbc"},"request_uri":"http://localhost:15600/_wdt/b05fbc","method":"GET"} []
[2023-08-22T18:18:13.978701+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:18:13.979710+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:19.545145+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:19.545748+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:21.141320+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:21.141845+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:24.516355+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:24.516969+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:24.519080+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to undefined method App\Controller\PingController::getDoctrine()" at /var/www/project/src/Controller/PingController.php line 15 {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\PingController::getDoctrine() at /var/www/project/src/Controller/PingController.php:15)"} []
[2023-08-22T18:19:24.548260+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1dcf0c"},"request_uri":"http://localhost:15600/_wdt/1dcf0c","method":"GET"} []
[2023-08-22T18:19:49.357341+00:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/project/var/cache/de_/App_KernelDevDebugContainer.php {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/var/www/project/vendor/symfony/config/Resource/FileResource.php","line":58,"trace":[{"file":"/var/www/project/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-08-22T18:19:49.361932+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:49.362876+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:49.366051+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to undefined method App\Controller\PingController::getDoctrine()" at /var/www/project/src/Controller/PingController.php line 15 {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\PingController::getDoctrine() at /var/www/project/src/Controller/PingController.php:15)"} []
[2023-08-22T18:19:49.398599+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50f1ab"},"request_uri":"http://localhost:15600/_wdt/50f1ab","method":"GET"} []
[2023-08-22T18:19:50.019058+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:50.019576+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:50.021441+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to undefined method App\Controller\PingController::getDoctrine()" at /var/www/project/src/Controller/PingController.php line 15 {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\PingController::getDoctrine() at /var/www/project/src/Controller/PingController.php:15)"} []
[2023-08-22T18:19:50.047828+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d14bc6"},"request_uri":"http://localhost:15600/_wdt/d14bc6","method":"GET"} []
[2023-08-22T18:19:50.198344+00:00] request.INFO: Matched route "ping_check". {"route":"ping_check","route_parameters":{"_route":"ping_check","_controller":"App\\Controller\\PingController::ping"},"request_uri":"http://localhost:15600/ping","method":"GET"} []
[2023-08-22T18:19:50.198881+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-22T18:19:50.200857+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to undefined method App\Controller\PingController::getDoctrine()" at /var/www/project/src/Controller/PingController.php line 15 {"exception":"[object] (Error(code: 0): Call to undefined method App\\Controller\\PingController::getDoctrine() at /var/www/project/src/Controller/PingController.php:15)"} []
[2023-08-22T18:19:50.227608+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_wdt/eb16c0","method":"GET"} []
[2023-08-22T18:19:52.322310+00:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_profiler/eb16c0?panel=logger","method":"GET"} []
[2023-08-22T18:19:54.814309+00:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_profiler/eb16c0?panel=request","method":"GET"} []
[2023-08-22T18:20:18.595907+00:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_profiler/eb16c0?panel=exception","method":"GET"} []
[2023-08-22T18:20:24.570757+00:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_profiler/eb16c0?panel=logger","method":"GET"} []
[2023-08-22T18:20:26.144817+00:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"eb16c0"},"request_uri":"http://localhost:15600/_profiler/eb16c0?panel=exception","method":"GET"} []
[2023-08-27T08:30:20.542567+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:30:20.560008+00:00] console.CRITICAL: Error thrown while running command "'lexik:jwt:generate-keypair'". Message: "There are no commands defined in the "lexik:jwt" namespace." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"lexik:jwt\" namespace. at /var/www/project/vendor/symfony/console/Application.php:657)","command":"'lexik:jwt:generate-keypair'","message":"There are no commands defined in the \"lexik:jwt\" namespace."} []
[2023-08-27T08:33:23.703097+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:33:23.728858+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:33:23.734264+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:23.737774+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:33:23.741698+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:23.741890+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:33:23.744180+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-08-27T08:33:23.744573+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:23.744739+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wulkanizator'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wulkanizator'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-08-27T08:33:23.747346+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:23.747533+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:33:23.753422+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:33:23.754669+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:33:23.756525+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:33:23.759407+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:33:23.772350+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:33:23.782080+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:33:23.782915+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2031 called by MessengerTransportDoctrineSchemaListener.php:66, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2031 called by MessengerTransportDoctrineSchemaListener.php:66, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:33:23.783366+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:33:23.785089+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:33:23.785273+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:33:23.785391+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T08:33:29.164928+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:33:29.168298+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:29.587208+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:33:29.588186+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:33:29.597145+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2040, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2040, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:33:29.599826+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2023-08-27T08:33:29.614080+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:33:29.614627+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:33:29.614913+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:33:29.620216+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-08-27T08:33:29.622485+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE reception_hours_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE reception_hours_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-08-27T08:33:29.623186+00:00] doctrine.DEBUG: Executing query: CREATE TABLE reception_hours (id INT NOT NULL, time TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE reception_hours (id INT NOT NULL, time TIME(0) WITHOUT TIME ZONE NOT NULL, PRIMARY KEY(id))"} []
[2023-08-27T08:33:29.624835+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2023-08-27T08:33:29.628930+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2023-08-27T08:33:29.630288+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2023-08-27T08:33:29.631860+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2023-08-27T08:33:29.633188+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2023-08-27T08:33:29.634663+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2023-08-27T08:33:29.634825+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2023-08-27T08:33:29.634999+00:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2023-08-27T08:33:29.638656+00:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2023-08-27T08:33:29.639091+00:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2023-08-27T08:33:29.640359+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230827083323","2":"2023-08-27 08:33:29","3":20}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230827083323","2":"2023-08-27 08:33:29","3":20},"types":{"1":2,"2":2,"3":1}} []
[2023-08-27T08:33:29.640940+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-08-27T08:33:29.648331+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:33:29.648518+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:33:29.648628+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T08:34:43.473497+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:34:43.494854+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:34:43.497679+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.499520+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:34:43.501308+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-08-27T08:34:43.501696+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:34:43.501916+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.502105+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:34:43.509493+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.509712+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:34:43.510505+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.510709+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:34:43.511371+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:34:43.513355+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.513579+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:34:43.514348+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.516393+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:34:43.518796+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.519038+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:34:43.519741+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.519943+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:34:43.520527+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.520722+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:34:43.521110+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.521275+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:34:43.521795+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:34:43.522736+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.522907+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:34:43.523585+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.524025+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:34:43.525007+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-08-27T08:34:43.525331+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.525506+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wulkanizator'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wulkanizator'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-08-27T08:34:43.526444+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:34:43.526616+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:34:43.527731+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-08-27T08:34:43.527997+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:34:43.528161+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:34:43.528934+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:34:43.529411+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:34:43.529827+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16393 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16393 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.530110+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.530461+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (7) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.530643+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (6) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.530885+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (4) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.531088+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:34:43.532352+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:34:43.542307+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:34:43.546112+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:34:43.547438+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:34:43.549439+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:34:43.549693+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T08:34:43.549769+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:35:29.412173+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:37:36.404420+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:38:15.671676+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:38:15.674992+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.676704+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:38:15.678384+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-08-27T08:38:15.678718+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:38:15.678883+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.679045+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:38:15.686143+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.686329+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:38:15.686994+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.687154+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:38:15.687748+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:38:15.689631+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.689837+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:38:15.690604+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.692147+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:38:15.693686+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.693900+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:38:15.694510+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.694682+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:38:15.695242+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.695397+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:38:15.695742+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.695892+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:38:15.696375+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:38:15.697254+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.697411+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:38:15.698094+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.698516+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:38:15.699441+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-08-27T08:38:15.699797+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.699994+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wulkanizator'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wulkanizator'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-08-27T08:38:15.700862+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:15.701035+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:38:15.702122+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-08-27T08:38:15.702402+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:38:15.702570+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:38:15.703334+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:38:15.703809+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:38:15.704248+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16393 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16393 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.704567+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.704958+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (7) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.705142+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (6) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.705319+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (4) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.705517+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16400 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:15.706752+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:38:15.717434+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:38:15.722347+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2137 called by AbstractPlatform.php:2056, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:38:15.723531+00:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2380 called by PostgreSQLPlatform.php:802, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:38:15.725389+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T08:38:15.725470+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:38:15.725620+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-08-27T08:38:21.132268+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:38:21.135639+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:21.563160+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:21.564170+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wulkanizator"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wulkanizator"},"types":{"1":2}} []
[2023-08-27T08:38:21.565796+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-08-27T08:38:21.566146+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-08-27T08:38:21.572834+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:21.573033+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-08-27T08:38:21.573730+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:21.573900+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-08-27T08:38:21.574532+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-08-27T08:38:21.576383+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-08-27T08:38:21.576598+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-08-27T08:38:21.577340+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-08-27T08:38:21.581080+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:38:21.581583+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:38:21.581835+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-08-27T08:38:21.582793+00:00] deprecation.INFO: User Deprecated: Doctrine\DBAL\Connection::getEventManager is deprecated. (Connection.php:296 called by DependencyFactory.php:203, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Doctrine\\DBAL\\Connection::getEventManager is deprecated. (Connection.php:296 called by DependencyFactory.php:203, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /var/www/project/vendor/doctrine/deprecations/lib/Doctrine/Deprecations/Deprecation.php:209)"} []
[2023-08-27T08:38:21.584160+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-08-27T08:38:21.585709+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE booking_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE booking_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-08-27T08:38:21.586178+00:00] doctrine.DEBUG: Executing query: CREATE TABLE booking (id INT NOT NULL, reception_hours_id INT DEFAULT NULL, registration_number VARCHAR(20) NOT NULL, date DATE NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE booking (id INT NOT NULL, reception_hours_id INT DEFAULT NULL, registration_number VARCHAR(20) NOT NULL, date DATE NOT NULL, PRIMARY KEY(id))"} []
[2023-08-27T08:38:21.590248+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_E00CEDDE8F6BD9C2 ON booking (reception_hours_id) {"sql":"CREATE INDEX IDX_E00CEDDE8F6BD9C2 ON booking (reception_hours_id)"} []
[2023-08-27T08:38:21.591601+00:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN booking.date IS '(DC2Type:date_immutable)' {"sql":"COMMENT ON COLUMN booking.date IS '(DC2Type:date_immutable)'"} []
[2023-08-27T08:38:21.591786+00:00] doctrine.DEBUG: Executing query: ALTER TABLE booking ADD CONSTRAINT FK_E00CEDDE8F6BD9C2 FOREIGN KEY (reception_hours_id) REFERENCES reception_hours (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE booking ADD CONSTRAINT FK_E00CEDDE8F6BD9C2 FOREIGN KEY (reception_hours_id) REFERENCES reception_hours (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-08-27T08:38:21.593270+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230827083815","2":"2023-08-27 08:38:21","3":9}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230827083815","2":"2023-08-27 08:38:21","3":9},"types":{"1":2,"2":2,"3":1}} []
[2023-08-27T08:38:21.593620+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-08-27T08:38:21.598986+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T08:54:30.625166+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T08:54:30.643475+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:54:30.644522+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:54:54.923523+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:54:54.925260+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:55:54.011039+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:55:54.011980+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:56:42.275499+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:56:42.276587+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:56:57.465573+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:56:57.466380+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:57:11.783674+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addOffice"},"request_uri":"http://localhost:15600/booking","method":"POST"} []
[2023-08-27T08:57:11.784553+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T08:57:11.818112+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T08:57:11.821182+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('booking_id_seq') {"sql":"SELECT NEXTVAL('booking_id_seq')"} []
[2023-08-27T08:57:11.823446+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-08-27T08:57:11.832344+00:00] doctrine.DEBUG: Executing statement: INSERT INTO booking (id, registration_number, date, reception_hours_id) VALUES (?, ?, ?, ?) (parameters: array{"1":1,"2":"ZS785AA","3":"2015-08-08","4":null}, types: array{"1":1,"2":2,"3":2,"4":1}) {"sql":"INSERT INTO booking (id, registration_number, date, reception_hours_id) VALUES (?, ?, ?, ?)","params":{"1":1,"2":"ZS785AA","3":"2015-08-08","4":null},"types":{"1":1,"2":2,"3":2,"4":1}} []
[2023-08-27T08:57:11.832898+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-08-27T08:57:11.854706+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:47:41.801167+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/project/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-08-27T10:47:41.826671+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::index"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:47:41.827895+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:47:41.887728+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:47:41.895186+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:47:41.936504+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:48:33.785530+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::index"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:48:33.786687+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:48:33.791702+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:48:33.793993+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:48:33.804752+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:49:15.305057+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::index"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:49:15.305653+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:49:15.309416+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:49:15.311162+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:49:15.314516+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTime() on null" at /var/www/project/src/Controller/BookingController.php line 36 {"exception":"[object] (Error(code: 0): Call to a member function getTime() on null at /var/www/project/src/Controller/BookingController.php:36)"} []
[2023-08-27T10:49:15.354242+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:49:28.039572+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::index"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:49:28.040165+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:49:28.044354+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:49:28.046166+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:49:28.056487+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:51:41.467152+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"1"},"request_uri":"http://localhost:15600/booking/get/1","method":"GET"} []
[2023-08-27T10:51:41.467803+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:51:41.471789+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Doctrine\ORM\EntityRepository::findOneBy(): Argument #1 ($criteria) must be of type array, int given, called in /var/www/project/src/Controller/BookingController.php on line 47" at /var/www/project/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php line 237 {"exception":"[object] (TypeError(code: 0): Doctrine\\ORM\\EntityRepository::findOneBy(): Argument #1 ($criteria) must be of type array, int given, called in /var/www/project/src/Controller/BookingController.php on line 47 at /var/www/project/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php:237)"} []
[2023-08-27T10:52:03.382849+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"1"},"request_uri":"http://localhost:15600/booking/get/1","method":"GET"} []
[2023-08-27T10:52:03.383936+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:52:13.073151+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"1"},"request_uri":"http://localhost:15600/booking/get/1","method":"GET"} []
[2023-08-27T10:52:13.073808+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:52:13.086288+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:52:13.090801+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":1},"types":{"1":1}} []
[2023-08-27T10:52:13.102029+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:52:18.230116+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"111"},"request_uri":"http://localhost:15600/booking/get/111","method":"GET"} []
[2023-08-27T10:52:18.230677+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:52:18.235545+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:52:18.237343+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":111}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":111},"types":{"1":1}} []
[2023-08-27T10:52:18.239143+00:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getId() on null" at /var/www/project/src/Controller/BookingController.php line 50 {"exception":"[object] (Error(code: 0): Call to a member function getId() on null at /var/www/project/src/Controller/BookingController.php:50)"} []
[2023-08-27T10:52:18.263704+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:52:23.159232+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"1"},"request_uri":"http://localhost:15600/booking/get/1","method":"GET"} []
[2023-08-27T10:52:23.159832+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:52:23.165301+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:52:23.167284+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":1},"types":{"1":1}} []
[2023-08-27T10:52:23.177934+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:53:17.498549+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"1"},"request_uri":"http://localhost:15600/booking/get/1","method":"GET"} []
[2023-08-27T10:53:17.499329+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:53:17.504205+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:53:17.506072+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":1},"types":{"1":1}} []
[2023-08-27T10:53:17.515981+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:53:19.477642+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"111"},"request_uri":"http://localhost:15600/booking/get/111","method":"GET"} []
[2023-08-27T10:53:19.478145+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:53:19.482518+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:53:19.484367+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":111}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":111},"types":{"1":1}} []
[2023-08-27T10:53:19.493157+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:53:57.618715+00:00] request.INFO: Matched route "booking_get_by_id". {"route":"booking_get_by_id","route_parameters":{"_route":"booking_get_by_id","_controller":"App\\Controller\\BookingController::getBooking","id":"111"},"request_uri":"http://localhost:15600/booking/get/111","method":"GET"} []
[2023-08-27T10:53:57.619346+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:53:57.624539+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:53:57.626503+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1 (parameters: array{"1":111}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 WHERE t0.id = ? LIMIT 1","params":{"1":111},"types":{"1":1}} []
[2023-08-27T10:53:57.636572+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:54:16.309325+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::getBookings"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:54:16.309990+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:54:16.313798+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:54:16.315551+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:54:16.325836+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:54:29.386340+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addBooking"},"request_uri":"http://localhost:15600/booking/add","method":"GET"} []
[2023-08-27T10:54:29.386931+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:54:29.390674+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "App\Entity\Booking::setRegistrationNumber(): Argument #1 ($registrationNumber) must be of type string, null given, called in /var/www/project/src/Controller/BookingController.php on line 65" at /var/www/project/src/Entity/Booking.php line 36 {"exception":"[object] (TypeError(code: 0): App\\Entity\\Booking::setRegistrationNumber(): Argument #1 ($registrationNumber) must be of type string, null given, called in /var/www/project/src/Controller/BookingController.php on line 65 at /var/www/project/src/Entity/Booking.php:36)"} []
[2023-08-27T10:54:33.458343+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST http://localhost:15600/booking/add": Method Not Allowed (Allow: GET)" at /var/www/project/vendor/symfony/http-kernel/EventListener/RouterListener.php line 131 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST http://localhost:15600/booking/add\": Method Not Allowed (Allow: GET) at /var/www/project/vendor/symfony/http-kernel/EventListener/RouterListener.php:131)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/project/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:46)"} []
[2023-08-27T10:54:47.680391+00:00] request.INFO: Matched route "booking_add". {"route":"booking_add","route_parameters":{"_route":"booking_add","_controller":"App\\Controller\\BookingController::addBooking"},"request_uri":"http://localhost:15600/booking/add","method":"POST"} []
[2023-08-27T10:54:47.681316+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:54:47.684157+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:54:47.686000+00:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('booking_id_seq') {"sql":"SELECT NEXTVAL('booking_id_seq')"} []
[2023-08-27T10:54:47.687612+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-08-27T10:54:47.689518+00:00] doctrine.DEBUG: Executing statement: INSERT INTO booking (id, registration_number, date, reception_hours_id) VALUES (?, ?, ?, ?) (parameters: array{"1":2,"2":"ZS785AAa","3":"2015-08-09","4":null}, types: array{"1":1,"2":2,"3":2,"4":1}) {"sql":"INSERT INTO booking (id, registration_number, date, reception_hours_id) VALUES (?, ?, ?, ?)","params":{"1":2,"2":"ZS785AAa","3":"2015-08-09","4":null},"types":{"1":1,"2":2,"3":2,"4":1}} []
[2023-08-27T10:54:47.689964+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-08-27T10:54:47.699644+00:00] doctrine.INFO: Disconnecting [] []
[2023-08-27T10:54:53.039020+00:00] request.INFO: Matched route "booking_get". {"route":"booking_get","route_parameters":{"_route":"booking_get","_controller":"App\\Controller\\BookingController::getBookings"},"request_uri":"http://localhost:15600/booking/get","method":"GET"} []
[2023-08-27T10:54:53.040034+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-08-27T10:54:53.044743+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"postgres","port":5432,"user":"wulkanizator_user","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wulkanizator","serverVersion":"13","charset":"utf8"}} []
[2023-08-27T10:54:53.046569+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0 {"sql":"SELECT t0.id AS id_1, t0.registration_number AS registration_number_2, t0.date AS date_3, t0.reception_hours_id AS reception_hours_id_4 FROM booking t0"} []
[2023-08-27T10:54:53.056470+00:00] doctrine.INFO: Disconnecting [] []
